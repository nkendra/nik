///////////////////////////////////////////////////////////////////////////////
/// @file Util\Singleton.h
/// @brief Declaration Singleton template class
/// @internal
///
/// 13March2010, nik: initial
///////////////////////////////////////////////////////////////////////////////
#ifndef NIK_SINGLETON_HEADER
#define NIK_SINGLETON_HEADER

namespace nik {

///////////////////////////////////////////////////////////////////////////////
/// @class Singleton Singleton.h <Util/Singleton.h>
/// @brief Generic singleton
/// @details This class implements the Singleton pattern.  
/// @tparam T The type of the class to make into a singleton
///////////////////////////////////////////////////////////////////////////////
template <class T>
class Singleton
{
public:
    
    ///////////////////////////////////////////////////////////////////////////
    /// @brief Get a reference to the singleton
    /// @return Refernce to the singleton
    ///////////////////////////////////////////////////////////////////////////
    static T& Ref()
    {
        static T this_ptr;
        return this_ptr;
    }

protected:
    Singleton();
private:
    

}; // end class Singleton

} // end namespace nik

#endif

////////////////////////End-of-File////////////////////////////////////////////
