///////////////////////////////////////////////////////////////////////////////
/// @file CallBack.cpp
/// @brief Contains the implementation of the generic callback classes
/// @internal
///
/// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////

#include "CallBack.h"
#include <cassert>

namespace nik {

//----------------------CallBack-Imlementation-------------------------------//
//----------------------Static-Members---------------------------------------//
//----------------------Public-Implementation--------------------------------//
///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////
CallBack::CallBack
    (
    GenericFunctor* func
    )
:
m_Func(func)
{
    assert(func);
} // end CallBack::CallBack


///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////   
CallBack::~CallBack()
{
    delete m_Func;
}


///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////   
CallBack::CallBack
    (
    const CallBack& orig
    )
:
m_Func(orig.m_Func)
{
}


///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////    
CallBack& CallBack::operator=
    (
    const CallBack& rhs
    )
{
    CallBack t(rhs);
    Swap(t);
    return *this;
} // end CallBack::operator=

///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////    
void CallBack::Swap
    (
    CallBack& rhs
    )
{
    GenericFunctor* thisOldm_Func = m_Func;
    m_Func = rhs.m_Func;
    rhs.m_Func = thisOldm_Func;

} // end CallBack::Swap

///////////////////////////////////////////////////////////////////////////////
// 15June2010, nik: initial
///////////////////////////////////////////////////////////////////////////////
void CallBack::Call()
{
    m_Func->CallFunc();
} // end CallBack::Call

} // end namespace nik

////////////////////////End-of-File////////////////////////////////////////////
